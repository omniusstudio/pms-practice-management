{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pms.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pms.labels" . | nindent 4 }}
    component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "pms.selectorLabels" . | nindent 6 }}
      component: backend
  template:
    metadata:
      labels:
        {{- include "pms.selectorLabels" . | nindent 8 }}
        component: backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "pms.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: AUTH0_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AUTH0_DOMAIN
        - name: AUTH0_AUDIENCE
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AUTH0_AUDIENCE
        - name: AUTH0_ISSUER
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AUTH0_ISSUER
        - name: API_V1_STR
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: API_V1_STR
        - name: PROJECT_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: PROJECT_NAME
        - name: BACKEND_CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: BACKEND_CORS_ORIGINS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: LOG_FORMAT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: DEBUG
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: DATABASE_NAME
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: REDIS_URL
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AWS_REGION
        - name: AWS_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AWS_S3_BUCKET
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: DATABASE_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: REDIS_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: SECRET_KEY
        - name: ALGORITHM
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: ALGORITHM
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: ACCESS_TOKEN_EXPIRE_MINUTES
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: AUTH0_CLIENT_ID
        - name: AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: AUTH0_CLIENT_SECRET
        - name: OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: OIDC_CLIENT_ID
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: OIDC_CLIENT_SECRET
        - name: OIDC_DISCOVERY_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: OIDC_DISCOVERY_URL
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-log
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "pms.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pms.labels" . | nindent 4 }}
    component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
  - port: {{ .Values.backend.service.port }}
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "pms.selectorLabels" . | nindent 4 }}
    component: backend
{{- end }}
