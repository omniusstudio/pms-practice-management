"""add_practice_tables

Revision ID: e8d4947f3106
Revises: a4226ccee6fc
Create Date: 2025-08-03 14:41:17.463754

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "e8d4947f3106"
down_revision = "a4226ccee6fc"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "practice_profiles",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("legal_name", sa.String(length=255), nullable=True),
        sa.Column("tax_id", sa.String(length=20), nullable=True),
        sa.Column("npi_number", sa.String(length=20), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("fax", sa.String(length=20), nullable=True),
        sa.Column("website", sa.String(length=255), nullable=True),
        sa.Column("address_line1", sa.String(length=255), nullable=True),
        sa.Column("address_line2", sa.String(length=255), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("state", sa.String(length=50), nullable=True),
        sa.Column("zip_code", sa.String(length=10), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=False),
        sa.Column("timezone", sa.String(length=50), nullable=False),
        sa.Column("default_appointment_duration", sa.String(length=10), nullable=False),
        sa.Column("accepts_new_patients", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("billing_provider_name", sa.String(length=255), nullable=True),
        sa.Column("billing_contact_email", sa.String(length=255), nullable=True),
        sa.Column("billing_contact_phone", sa.String(length=20), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("administrative_notes", sa.Text(), nullable=True),
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("correlation_id", sa.String(length=255), nullable=True),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("npi_number"),
    )
    op.create_index(
        "idx_practice_active", "practice_profiles", ["is_active"], unique=False
    )
    op.create_index("idx_practice_email", "practice_profiles", ["email"], unique=False)
    op.create_index("idx_practice_name", "practice_profiles", ["name"], unique=False)
    op.create_index(
        "idx_practice_npi", "practice_profiles", ["npi_number"], unique=False
    )
    op.create_index(
        "idx_practice_tenant", "practice_profiles", ["tenant_id"], unique=False
    )
    op.create_index(
        op.f("ix_practice_profiles_correlation_id"),
        "practice_profiles",
        ["correlation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_practice_profiles_email"), "practice_profiles", ["email"], unique=False
    )
    op.create_index(
        op.f("ix_practice_profiles_tenant_id"),
        "practice_profiles",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "locations",
        sa.Column("practice_profile_id", postgresql.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("location_type", sa.String(length=50), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("fax", sa.String(length=20), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("address_line1", sa.String(length=255), nullable=False),
        sa.Column("address_line2", sa.String(length=255), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=False),
        sa.Column("state", sa.String(length=50), nullable=False),
        sa.Column("zip_code", sa.String(length=10), nullable=False),
        sa.Column("country", sa.String(length=100), nullable=False),
        sa.Column("timezone", sa.String(length=50), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("accepts_appointments", sa.Boolean(), nullable=False),
        sa.Column("wheelchair_accessible", sa.Boolean(), nullable=False),
        sa.Column("parking_available", sa.Boolean(), nullable=False),
        sa.Column("public_transport_accessible", sa.Boolean(), nullable=False),
        sa.Column("operating_hours", sa.Text(), nullable=True),
        sa.Column("special_instructions", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("administrative_notes", sa.Text(), nullable=True),
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("correlation_id", sa.String(length=255), nullable=True),
        sa.Column("tenant_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["practice_profile_id"], ["practice_profiles.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_location_active", "locations", ["is_active"], unique=False)
    op.create_index(
        "idx_location_city_state", "locations", ["city", "state"], unique=False
    )
    op.create_index("idx_location_name", "locations", ["name"], unique=False)
    op.create_index(
        "idx_location_practice", "locations", ["practice_profile_id"], unique=False
    )
    op.create_index("idx_location_primary", "locations", ["is_primary"], unique=False)
    op.create_index("idx_location_tenant", "locations", ["tenant_id"], unique=False)
    op.create_index(
        op.f("ix_locations_correlation_id"),
        "locations",
        ["correlation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_locations_practice_profile_id"),
        "locations",
        ["practice_profile_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_locations_tenant_id"), "locations", ["tenant_id"], unique=False
    )
    op.add_column(
        "appointments", sa.Column("tenant_id", sa.String(length=255), nullable=True)
    )
    op.create_index(
        op.f("ix_appointments_tenant_id"), "appointments", ["tenant_id"], unique=False
    )
    op.add_column(
        "audit_log", sa.Column("tenant_id", sa.String(length=255), nullable=True)
    )
    op.create_index(
        op.f("ix_audit_log_tenant_id"), "audit_log", ["tenant_id"], unique=False
    )
    op.add_column(
        "clients", sa.Column("tenant_id", sa.String(length=255), nullable=True)
    )
    op.create_index(
        op.f("ix_clients_tenant_id"), "clients", ["tenant_id"], unique=False
    )
    op.add_column(
        "ledger", sa.Column("tenant_id", sa.String(length=255), nullable=True)
    )
    op.create_index(op.f("ix_ledger_tenant_id"), "ledger", ["tenant_id"], unique=False)
    op.add_column("notes", sa.Column("tenant_id", sa.String(length=255), nullable=True))
    op.create_index(op.f("ix_notes_tenant_id"), "notes", ["tenant_id"], unique=False)
    op.add_column(
        "providers", sa.Column("tenant_id", sa.String(length=255), nullable=True)
    )
    op.create_index(
        op.f("ix_providers_tenant_id"), "providers", ["tenant_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_providers_tenant_id"), table_name="providers")
    op.drop_column("providers", "tenant_id")
    op.drop_index(op.f("ix_notes_tenant_id"), table_name="notes")
    op.drop_column("notes", "tenant_id")
    op.drop_index(op.f("ix_ledger_tenant_id"), table_name="ledger")
    op.drop_column("ledger", "tenant_id")
    op.drop_index(op.f("ix_clients_tenant_id"), table_name="clients")
    op.drop_column("clients", "tenant_id")
    op.drop_index(op.f("ix_audit_log_tenant_id"), table_name="audit_log")
    op.drop_column("audit_log", "tenant_id")
    op.drop_index(op.f("ix_appointments_tenant_id"), table_name="appointments")
    op.drop_column("appointments", "tenant_id")
    op.drop_index(op.f("ix_locations_tenant_id"), table_name="locations")
    op.drop_index(op.f("ix_locations_practice_profile_id"), table_name="locations")
    op.drop_index(op.f("ix_locations_correlation_id"), table_name="locations")
    op.drop_index("idx_location_tenant", table_name="locations")
    op.drop_index("idx_location_primary", table_name="locations")
    op.drop_index("idx_location_practice", table_name="locations")
    op.drop_index("idx_location_name", table_name="locations")
    op.drop_index("idx_location_city_state", table_name="locations")
    op.drop_index("idx_location_active", table_name="locations")
    op.drop_table("locations")
    op.drop_index(
        op.f("ix_practice_profiles_tenant_id"), table_name="practice_profiles"
    )
    op.drop_index(op.f("ix_practice_profiles_email"), table_name="practice_profiles")
    op.drop_index(
        op.f("ix_practice_profiles_correlation_id"), table_name="practice_profiles"
    )
    op.drop_index("idx_practice_tenant", table_name="practice_profiles")
    op.drop_index("idx_practice_npi", table_name="practice_profiles")
    op.drop_index("idx_practice_name", table_name="practice_profiles")
    op.drop_index("idx_practice_email", table_name="practice_profiles")
    op.drop_index("idx_practice_active", table_name="practice_profiles")
    op.drop_table("practice_profiles")
    # ### end Alembic commands ###
