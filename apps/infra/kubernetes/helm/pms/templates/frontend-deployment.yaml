{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pms.fullname" . }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pms.labels" . | nindent 4 }}
    component: frontend
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "pms.selectorLabels" . | nindent 6 }}
      component: frontend
  template:
    metadata:
      labels:
        {{- include "pms.selectorLabels" . | nindent 8 }}
        component: frontend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "pms.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: frontend
        image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: VITE_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: VITE_API_BASE_URL
        - name: VITE_AUTH0_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: AUTH0_DOMAIN
        - name: VITE_AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "pms.fullname" . }}-secrets
              key: AUTH0_CLIENT_ID
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ include "pms.fullname" . }}-config
              key: ENVIRONMENT
        resources:
          {{- toYaml .Values.frontend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache/nginx
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "pms.fullname" . }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pms.labels" . | nindent 4 }}
    component: frontend
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
  - port: {{ .Values.frontend.service.port }}
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "pms.selectorLabels" . | nindent 4 }}
    component: frontend
{{- end }}
